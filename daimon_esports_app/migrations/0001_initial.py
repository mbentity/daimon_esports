# Generated by Django 5.0.6 on 2024-07-05 12:27

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('display', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('organizer', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('sub_start', models.DateTimeField()),
                ('sub_stop', models.DateTimeField()),
                ('games_start', models.DateTimeField()),
                ('games_stop', models.DateTimeField()),
                ('team_count', models.IntegerField()),
                ('player_count', models.IntegerField()),
                ('meeting_platform', models.CharField(max_length=255)),
                ('streaming_platform', models.CharField(max_length=255)),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='daimon_esports_app.discipline')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Roster',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('tag', models.CharField(max_length=4, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='daimon_esports_app.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('minutes', models.IntegerField()),
                ('roster1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster1', to='daimon_esports_app.roster')),
                ('roster2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster2', to='daimon_esports_app.roster')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='daimon_esports_app.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('sender', 'receiver')},
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('roster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='daimon_esports_app.roster')),
            ],
            options={
                'unique_together': {('user', 'roster')},
            },
        ),
    ]
